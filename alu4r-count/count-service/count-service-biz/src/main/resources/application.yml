server:
  port: 7003
  servlet:
    context-path: /count-service

spring:
  application:
    name: count-service
    #设置请求格式化时间
    mvc:
      date-format: yyyy-MM-dd HH:mm:ss
      time-zone: GMT+8
    #设置返回格式化时间
    jackson:
      date-format: yyyy-MM-dd HH:mm:ss
      time-zone: GMT+8

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
  redis:
    host: 47.100.58.237
    port: 6379
    password: redis//4142

  datasource:
    druid:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://47.100.58.237:3306/api_count?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull
      username: root
      password: alu4r//4142

      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 连接等待超时时间
      max-wait: 30000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: select '1' from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      filters: stat,wall
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
#      aop-patterns: com.*

#eureka:
#  instance:
#    instance-id: count-service
#    #访问路径可以显示IP地址
#    prefer-ip-address: true
#    #Eureka客户端向服务端发送心跳的时间间隔.单位为秒(默认30 秒)
#    lease-renewal-interval-in-seconds: 1
#    #Eureka服务端在收到最后一次心跳等待时间上限.单位为秒(默认90 秒),超时将剔除服务
#    lease-expiration-duration-in-seconds: 2
#  client:
#    #是否从EurekaServer抓取已有的注册信息,单机无所谓,集群必须设置为true配合ribbon使用负载均衡
#    fetch-registry: true
#    #是否将自己注册到注册中心, 默认true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://127.0.0.1:7001/eureka/